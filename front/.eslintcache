[{"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\index.js":"1","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\App.js":"2","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\reportWebVitals.js":"3","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\homepage\\homepage.js":"4","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\playlist\\playlist.js":"5","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\musics\\addMusic.js":"6","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\administration.js":"7","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\profile\\profile.js":"8","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\playlists\\updatePlaylist.js":"9","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\musics\\updateMusic.js":"10","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\playlists\\addPlaylist.js":"11","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\categories\\addCategory.js":"12","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\categories\\updateCategory.js":"13","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\components\\menu\\menu.js":"14","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\categories\\categories.js":"15","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\playlists\\playlists.js":"16","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\musics\\musics.js":"17","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\services\\playlist.service.js":"18","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\services\\category.service.js":"19","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\services\\music.service.js":"20","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\components\\playlist-card\\playlist-card.js":"21","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\topbar\\topbar.js":"22","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\users\\users.js":"23","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\edit-profile\\edit-profile.js":"24","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\register\\register.js":"25","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\login\\login.js":"26","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\services\\user.service.js":"27","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\rootReducer.js":"28","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\actions\\users.actions.js":"29","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\users\\updateUser.js":"30"},{"size":1200,"mtime":1610018585067,"results":"31","hashOfConfig":"32"},{"size":3101,"mtime":1610117574465,"results":"33","hashOfConfig":"32"},{"size":375,"mtime":1607527237672,"results":"34","hashOfConfig":"32"},{"size":2753,"mtime":1610117531621,"results":"35","hashOfConfig":"32"},{"size":4651,"mtime":1610119248967,"results":"36","hashOfConfig":"32"},{"size":4798,"mtime":1610117531614,"results":"37","hashOfConfig":"32"},{"size":711,"mtime":1609941916525,"results":"38","hashOfConfig":"32"},{"size":1931,"mtime":1610117574467,"results":"39","hashOfConfig":"32"},{"size":8449,"mtime":1610117531618,"results":"40","hashOfConfig":"32"},{"size":7341,"mtime":1610117531615,"results":"41","hashOfConfig":"32"},{"size":4016,"mtime":1610117531616,"results":"42","hashOfConfig":"32"},{"size":1374,"mtime":1610031780702,"results":"43","hashOfConfig":"32"},{"size":1978,"mtime":1610031780703,"results":"44","hashOfConfig":"32"},{"size":3862,"mtime":1610117531620,"results":"45","hashOfConfig":"32"},{"size":3437,"mtime":1610117531613,"results":"46","hashOfConfig":"32"},{"size":5945,"mtime":1610117531617,"results":"47","hashOfConfig":"32"},{"size":3987,"mtime":1610117531615,"results":"48","hashOfConfig":"32"},{"size":2045,"mtime":1610031780700,"results":"49","hashOfConfig":"32"},{"size":1405,"mtime":1610031780699,"results":"50","hashOfConfig":"32"},{"size":1477,"mtime":1610037736656,"results":"51","hashOfConfig":"32"},{"size":876,"mtime":1610031780706,"results":"52","hashOfConfig":"32"},{"size":936,"mtime":1609941916531,"results":"53","hashOfConfig":"32"},{"size":3388,"mtime":1610117531619,"results":"54","hashOfConfig":"32"},{"size":1666,"mtime":1610117574466,"results":"55","hashOfConfig":"32"},{"size":3477,"mtime":1610031780707,"results":"56","hashOfConfig":"32"},{"size":3409,"mtime":1610018585069,"results":"57","hashOfConfig":"32"},{"size":1335,"mtime":1610031780701,"results":"58","hashOfConfig":"32"},{"size":414,"mtime":1610018585067,"results":"59","hashOfConfig":"32"},{"size":255,"mtime":1610018585066,"results":"60","hashOfConfig":"32"},{"size":3453,"mtime":1610117531618,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1ublpbj",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"64"},"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\index.js",[],["130","131"],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\App.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\reportWebVitals.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\homepage\\homepage.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\playlist\\playlist.js",["132","133"],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\musics\\addMusic.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\administration.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\profile\\profile.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\playlists\\updatePlaylist.js",["134","135","136","137"],"import React, {Component} from 'react';\r\nimport MusicService from \"../../../services/music.service\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport PlaylistService from \"../../../services/playlist.service\";\r\n\r\nexport default class UpdatePlaylist extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: null,\r\n            public: false,\r\n            musicsId: [],\r\n            image_path: null,\r\n\r\n            musics: [],\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let response = await MusicService.getMusics();\r\n            let playlist = await PlaylistService.getPlaylist(this.props.match.params._id);\r\n            if (playlist)\r\n                this.setState({\r\n                    name: playlist.name,\r\n                    public: Boolean(playlist.public),\r\n                    musicsId: playlist.musicsId,\r\n                    image_path: playlist.image_path,\r\n\r\n                    musics: response\r\n                });\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        if ([e.target.id].toString() === \"public\") {\r\n            this.setState({\r\n                [e.target.id]: e.target.checked\r\n            });\r\n        } else {\r\n            this.setState({\r\n                [e.target.id]: e.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChangeSelect(e) {\r\n        let value = Array.from(e.target.selectedOptions, option => option.value);\r\n        this.setState({[e.target.id]: value});\r\n    }\r\n\r\n    async submit(e) {\r\n        e.preventDefault();\r\n        let playlist = {\r\n            _id: parseInt(this.props.match.params._id),\r\n            name: this.state.name,\r\n            musicsId: this.state.musicsId,\r\n            image_path: this.state.image_path,\r\n            public: this.state.public\r\n        };\r\n\r\n        let formData = new FormData();\r\n        formData.append('name', playlist.name);\r\n        formData.append('musicsId', playlist.musicsId);\r\n        formData.append('image_path', playlist.image_path);\r\n        formData.append('public', playlist.public);\r\n\r\n        try {\r\n            await PlaylistService.update(formData, playlist._id);\r\n            this.props.history.push('/admin/playlists');\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {musics} = this.state;\r\n        return <div className=\"form-content\">\r\n            <h2>Formulaire d'édition de playlist</h2>\r\n            <hr className=\"hr-form\"/>\r\n            <form onSubmit={(e) => this.submit(e)}>\r\n                <div className=\"form-group\">\r\n                    <label>Nom</label>\r\n                    <input type=\"text\" id=\"name\" required className=\"form-control\"\r\n                           value={this.state.name ? this.state.name : undefined}\r\n                           onChange={(e) => this.handleChange(e)}/>\r\n                </div>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"form-group\">\r\n                            <label>Musiques</label>\r\n                            <select id=\"musicsId\" required className=\"form-control\" multiple={true}\r\n                                    onChange={(e) => this.handleChangeSelect(e)}>\r\n                                {\r\n                                    musics.map((music, index) => {\r\n                                        return <option key={index} value={music._id}>{music.name}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs={3}>\r\n                        <div className=\"form-group\">\r\n                            <label>Public</label>\r\n                            <input type=\"checkbox\" id=\"public\" className=\"form-control\" checked={this.state.public}\r\n                                   onChange={(e) => this.handleChange(e)}/>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"form-group\">\r\n                    <label>Image path</label>\r\n                    <input type=\"text\" id=\"image_path\" required className=\"form-control\"\r\n                           value={this.state.image_path ? this.state.image_path : undefined}\r\n                           onChange={(e) => this.handleChange(e)}/>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">Enregistrer</button>\r\n            </form>\r\n\r\n        </div>\r\n    }\r\n}\r\n","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\musics\\updateMusic.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\playlists\\addPlaylist.js",["138"],"import React, { Component } from 'react';\r\nimport MusicService from \"../../../services/music.service\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport PlaylistService from \"../../../services/playlist.service\";\r\n\r\nexport default class AddPlaylist extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: null,\r\n            isPublic: null,\r\n            image_path: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        // try {\r\n        //     let response = await MusicService.getMusics();\r\n        //     this.setState({\r\n        //         musicsList: response.data.musics,\r\n        //     });\r\n        // } catch (e) {\r\n        //     console.error(e);\r\n        // }\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n        console.log(this.state[e.target.id]);\r\n    }\r\n\r\n    handleChangeCheckbox(e) {\r\n        this.setState({\r\n            isPublic: e.target.checked\r\n        });\r\n    }\r\n\r\n    handleChangeImage(e) {\r\n        this.setState({\r\n            image_path: e.target.files[0]\r\n        });\r\n    }\r\n\r\n    async submit(e) {\r\n        e.preventDefault();\r\n\r\n        let { name, image_path, isPublic } = this.state;\r\n\r\n        let body = new FormData();\r\n        body.append('name', name);\r\n        body.append('image_path', image_path);\r\n        body.append('public', isPublic);\r\n\r\n        try {\r\n            await PlaylistService.create(body);\r\n            this.props.history.push('/admin/playlists');\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"form-content\">\r\n            <h2>Formulaire d'ajout de playlist</h2>\r\n            <hr className=\"hr-form\" />\r\n            <form onSubmit={(e) => this.submit(e)}>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <div className=\"form-group\">\r\n                            <label>Nom</label>\r\n                            <input type=\"text\" id=\"name\" required className=\"form-control\"\r\n                                onChange={(e) => this.handleChange(e)} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <div className=\"form-group\">\r\n                            <label>Image path</label>\r\n                            <input type=\"file\" id=\"image_path\" required className=\"form-control\"\r\n                                onChange={(e) => this.handleChangeImage(e)} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {/* <Col>\r\n                        <div className=\"form-group\">\r\n                            <label>Musiques</label>\r\n                            <select id=\"musicsId\" required className=\"form-control\" multiple={true}\r\n                                onChange={(e) => this.handleChangeSelect(e)}>\r\n                                {\r\n                                    musics.map((music, index) => {\r\n                                        return <option key={index} value={music._id}>{music.name}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </Col> */}\r\n                    {/* <Col xs={6}> */}\r\n                    <Col xs={12}>\r\n                    <div className=\"form-check\">\r\n                        <input type=\"checkbox\" id=\"isPublic\" className=\"form-check-input\"\r\n                            onChange={(e) => this.handleChangeCheckbox(e)} />\r\n                        <label className=\"form-check-label\">Public</label>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n            <button type=\"submit\" style={{marginTop: \"25px\"}} className=\"btn btn-primary\">Ajouter</button>\r\n            </form>\r\n\r\n        </div >\r\n    }\r\n}\r\n","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\categories\\addCategory.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\categories\\updateCategory.js",["139"],"import React, {Component} from 'react';\r\nimport MusicService from \"../../../services/music.service\";\r\nimport CategoryService from \"../../../services/category.service\";\r\nimport './admin-category.scss'\r\n\r\nexport default class UpdateCategory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: null,\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let category = await CategoryService.getCategory(this.props.match.params._id);\r\n            if (category)\r\n                this.setState({\r\n                    name: category.name,\r\n                });\r\n            else this.props.history.push('/admin/categories')\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    async submit(e) {\r\n        e.preventDefault();\r\n        let {name} = this.state;\r\n        let category = {name};\r\n        category._id = parseInt(this.props.match.params._id);\r\n\r\n        let formData = new FormData();\r\n        formData.append('_id', parseInt(this.props.match.params._id));\r\n        formData.append('name', name);\r\n\r\n        try {\r\n            await MusicService.update(formData, category._id);\r\n            this.props.history.push('/admin/categories');\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"form-content\">\r\n            <h2>Formulaire d'édition de catégorie</h2>\r\n            <hr className=\"hr-form\"/>\r\n            <form onSubmit={(e) => this.submit(e)}>\r\n                <div className=\"form-group\">\r\n                    <label>Nom</label>\r\n                    <input type=\"text\" id=\"name\" required className=\"form-control\"\r\n                           value={this.state.name ? this.state.name : undefined}\r\n                           onChange={(e) => this.handleChange(e)}/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Enregistrer</button>\r\n            </form>\r\n\r\n        </div>\r\n    }\r\n}\r\n","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\components\\menu\\menu.js",["140"],"import React, {Component} from 'react';\r\nimport {Image, Nav, Navbar} from 'react-bootstrap';\r\nimport {HiCog, HiHome, HiUser, HiLogout} from \"react-icons/hi\";\r\nimport {FiLogIn} from \"react-icons/fi\"\r\nimport {NavLink, Link, withRouter} from \"react-router-dom\";\r\nimport './menu.scss';\r\nimport PlaylistService from \"../../../services/playlist.service\";\r\nimport {connect} from 'react-redux';\r\nimport {updateUser} from '../../../actions/users.actions'\r\n\r\n\r\nclass Menu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = ({\r\n            publicPlaylists: [],\r\n            privatePlaylists: []\r\n        });\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        let responsePrivate = await PlaylistService.getPrivatePlaylists();\r\n        let responsePublic = await PlaylistService.getPublicPlaylists();\r\n\r\n        this.setState({\r\n            publicPlaylists: responsePublic.data.playlists,\r\n            privatePlaylists: responsePrivate.data.playlists,\r\n        })\r\n    }\r\n\r\n    logout(){\r\n        const { history } = this.props;\r\n        localStorage.removeItem('token');\r\n        this.props.updateUser(null);\r\n        history.push('/login');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar className=\"navbar-left col-md-12 sidebar\" variant=\"dark\">\r\n                <Navbar.Brand>\r\n                    <Image src=\"images/logo.png\" className=\"navbar-logo\" alt={\"Logo\"}/>\r\n                </Navbar.Brand>\r\n                {\r\n                    this.props.user !== null ? (\r\n                        <Nav className=\"mr-auto test\">\r\n                            <NavLink exact to={'/'} className=\"nav-link\"><HiHome/> Accueil</NavLink>\r\n                            <NavLink exact to={'/profile'} className=\"nav-link\"><HiUser/> Profil</NavLink>\r\n                            <NavLink to={'/logout'} className=\"nav-link\" onClick={() => this.logout()}><HiLogout/> Logout</NavLink>\r\n                            <NavLink to={'/admin/musics'} className=\"nav-link\"><HiCog/> Administration</NavLink>\r\n                            <hr/>\r\n                            <div className={\"playlists-container\"}>\r\n                                <Nav.Item href=\"#10\">Playlists publiques</Nav.Item>\r\n                                {\r\n                                    this.state.publicPlaylists.map(function (playlist, i) {\r\n                                        return <NavLink key={i} to={`/playlist/${playlist.name}`}\r\n                                                        className=\"nav-link\">{playlist.name}</NavLink>\r\n                                    })\r\n                                }\r\n                                <hr/>\r\n                                <Nav.Item href=\"#9\">Playlists privées</Nav.Item>\r\n                                {\r\n                                    this.state.privatePlaylists.map(function (playlist, i) {\r\n                                        return <NavLink key={i} to={`/playlist/${playlist.name}`}\r\n                                                        className=\"nav-link\">{playlist.name}</NavLink>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </Nav>\r\n                    ) : (\r\n                        <Nav className=\"mr-auto test\">\r\n                            <NavLink exact to={'/login'} className=\"nav-link\"><FiLogIn/> Login</NavLink>\r\n                        </Nav>\r\n                    )\r\n                }  \r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user};\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateUser: user => dispatch(updateUser(user))\r\n    }\r\n}\r\n\r\nconst MenuWithRouter = withRouter(Menu);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuWithRouter);","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\categories\\categories.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\playlists\\playlists.js",["141"],"import React, { Component } from 'react';\r\nimport { Button, Col, Image, Row, Table } from \"react-bootstrap\";\r\nimport PlaylistService from \"../../../services/playlist.service\";\r\nimport { HiPencil, HiPlusCircle, HiTrash } from \"react-icons/hi/index\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Playlists extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            playlists: false\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let response = await PlaylistService.getPlaylists();\r\n\r\n            this.setState({\r\n                playlists: response.data.playlists\r\n            });\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async deletePlaylist(id) {\r\n        try {\r\n            await PlaylistService.delete(id);\r\n\r\n            let response = await PlaylistService.getPlaylists();\r\n            this.setState({\r\n                playlists: response.data.playlists\r\n            });\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { playlists } = this.state;\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col xs={10}>\r\n                        <h1>Playlists</h1>\r\n                    </Col>\r\n                    <Col>\r\n                        <Link to={`/admin/playlists/add`}>\r\n                            <Button variant=\"dark\"><HiPlusCircle /></Button>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"playlist-container\">\r\n                    <Table className=\"music-table\" hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"table-header\">Id</th>\r\n                                <th className=\"table-header\">Titre</th>\r\n                                <th className=\"table-header\">Créateur</th>\r\n                                <th className=\"table-header\">Public</th>\r\n                                <th className=\"table-header\">musiques</th>\r\n                                {/* <th className=\"table-header\">Image</th> */}\r\n                                {/* <th className=\"table-header\">Nombre d'écoute</th> */}\r\n                                <th className=\"table-header\">Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                playlists ?\r\n                                    // <p>test</p>\r\n                                    playlists.map((playlist, i) => {\r\n                                        return <tr className=\"music-tr\" key={i}>\r\n                                            <td>{playlist._id}</td>\r\n                                            <td>{playlist.name}</td>\r\n                                            <td>{playlist.userId ? `${playlist.userId.firstname} ${playlist.userId.lastname}` : '━'}</td>\r\n                                            <td style={{ textAlign: \"center\" }}>{playlist.public ?\r\n                                                <Image src={`images/public.png`} style={{ width: 25, height: 25 }}\r\n                                                    alt=\"Playlist image\" />\r\n                                                :\r\n                                                <Image src={`images/private.png`} style={{ width: 25, height: 25 }}\r\n                                                    alt=\"Playlist image\" />\r\n                                            }</td>\r\n                                            {/* <td>{(playlist.musicsId.length > 0) ? playlist.musicsId : '━'}</td> */}\r\n                                            <td>\r\n                                                {/* <ul> */}\r\n                                                {\r\n                                                    (playlist.musics.length > 0) ?\r\n                                                        playlist.musics.map((music, i) => {\r\n                                                            // <p>{i}</p>\r\n                                                            <li key={i}>{music.name}</li>\r\n                                                            // <li key={i}>salut</li>\r\n                                                        })\r\n                                                        : '━'\r\n                                                }\r\n                                                {/* </ul> */}\r\n                                            </td>\r\n\r\n                                            {/* <td>{playlist.image_path ? playlist.image_path : '━'}</td> */}\r\n                                            <td>\r\n                                                <Link to={`/admin/playlists/update/${playlist._id}`}>\r\n                                                    <Button style={{ marginRight: 10 }}\r\n                                                        variant=\"dark\"><HiPencil /></Button>\r\n                                                </Link>\r\n                                                <Button variant=\"dark\" onClick={() => this.deletePlaylist(playlist._id)}>\r\n                                                    <HiTrash />\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    })\r\n                                    :\r\n                                    <tr className=\"music-tr\">\r\n                                        <td colSpan=\"5\">Aucune playlist à afficher pour le moment</td>\r\n                                    </tr>\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Playlists;","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\musics\\musics.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\services\\playlist.service.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\services\\category.service.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\services\\music.service.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\components\\playlist-card\\playlist-card.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\topbar\\topbar.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\users\\users.js",["142"],"import React, {Component} from 'react';\r\n\r\nclass Users extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Users</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\edit-profile\\edit-profile.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\register\\register.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\login\\login.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\services\\user.service.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\rootReducer.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\actions\\users.actions.js",[],"C:\\Users\\alexy\\OneDrive\\Desktop\\M1_DevWeb\\Projet_React\\yfitops\\front\\src\\views\\administration\\users\\updateUser.js",["143","144"],"import React, { Component } from 'react';\r\nimport UserService from \"../../../services/user.service\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport './admin-user.scss'\r\n\r\nexport default class UpdateUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: null,\r\n            lastname: null,\r\n            email: null,\r\n            role: null,\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let response = await UserService.details(this.props.match.params._id);\r\n            console.log(response.data.user);\r\n            this.setState({\r\n                firstname: response.data.user.firstname,\r\n                lastname: response.data.user.lastname,\r\n                email: response.data.user.email,\r\n                role: response.data.user.role,\r\n            });\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    handleChangeRadio(e) {\r\n        this.setState({\r\n            role: e.target.value\r\n        });\r\n    }\r\n\r\n    async submit(e) {\r\n        e.preventDefault();\r\n        let { role } = this.state;\r\n        let id = this.props.match.params._id;\r\n\r\n        let body = {\r\n            role\r\n        }\r\n\r\n        try {\r\n            await UserService.update(body, id);\r\n            this.props.history.push('/admin/users');\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let name = `${this.state.firstname} ${this.state.lastname}`\r\n        return <div className=\"form-content\">\r\n            <h2>Formulaire d'édition d'utilisateur</h2>\r\n            <hr className=\"hr-form\" />\r\n            <form onSubmit={(e) => this.submit(e)}>\r\n                <Row>\r\n                    <Col xs={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Nom</label>\r\n                            <input type=\"text\" id=\"name\" readOnly className=\"form-control\"\r\n                                value={name} />\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Email</label>\r\n                            <input type=\"text\" id=\"email\" readOnly className=\"form-control\"\r\n                                value={this.state.email} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={6}>\r\n                        <div className=\"form-check\">\r\n                            <input type=\"radio\" value=\"0\" id=\"user\" name=\"role\" className=\"form-check-input\" checked={this.state.role == 0 ? true : false } onChange={(e)=>this.handleChangeRadio(e)} />\r\n                            <label className=\"form-check-label\">Utilisateur</label>\r\n                        </div>\r\n                        <div className=\"form-check\">\r\n                            <input type=\"radio\" value=\"10\" id=\"admin\" name=\"role\" className=\"form-check-input\" checked={this.state.role == 10 ? true : false } onChange={(e)=>this.handleChangeRadio(e)} />\r\n                            <label className=\"form-check-label\">Administrateur</label>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Enregistrer</button>\r\n            </form>\r\n\r\n        </div>\r\n    }\r\n}\r\n",{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":5,"column":10,"nodeType":"151","messageId":"152","endLine":5,"endColumn":16},{"ruleId":"149","severity":1,"message":"153","line":7,"column":8,"nodeType":"151","messageId":"152","endLine":7,"endColumn":20},{"ruleId":"149","severity":1,"message":"154","line":6,"column":10,"nodeType":"151","messageId":"152","endLine":6,"endColumn":21},{"ruleId":"155","severity":1,"message":"156","line":30,"column":53,"nodeType":"157","messageId":"158","endLine":30,"endColumn":55},{"ruleId":"155","severity":1,"message":"156","line":100,"column":39,"nodeType":"157","messageId":"158","endLine":100,"endColumn":41},{"ruleId":"155","severity":1,"message":"156","line":123,"column":39,"nodeType":"157","messageId":"158","endLine":123,"endColumn":41},{"ruleId":"149","severity":1,"message":"153","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":20},{"ruleId":"149","severity":1,"message":"159","line":36,"column":13,"nodeType":"151","messageId":"152","endLine":36,"endColumn":21},{"ruleId":"149","severity":1,"message":"160","line":5,"column":18,"nodeType":"151","messageId":"152","endLine":5,"endColumn":22},{"ruleId":"155","severity":1,"message":"156","line":91,"column":88,"nodeType":"157","messageId":"158","endLine":91,"endColumn":90},{"ruleId":"149","severity":1,"message":"161","line":3,"column":20,"nodeType":"151","messageId":"152","endLine":3,"endColumn":32},{"ruleId":"162","severity":1,"message":"163","line":81,"column":135,"nodeType":"164","messageId":"165","endLine":81,"endColumn":137},{"ruleId":"162","severity":1,"message":"163","line":85,"column":137,"nodeType":"164","messageId":"165","endLine":85,"endColumn":139},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'MusicService' is defined but never used.","'Multiselect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'category' is assigned a value but never used.","'Link' is defined but never used.","'HiPlusCircle' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]